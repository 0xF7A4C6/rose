package telnet

import (
	"fmt"
	"net"
	"scanner/components/utils"
	"strings"
)

func CmdSenderServer() {
	socket, err := net.Listen("tcp", fmt.Sprintf("0.0.0.0:%d", utils.ShellEnvPort))
	if err != nil {
		panic(err)
	}

	fmt.Println("[ShellEnvPort] Listening on port", utils.ShellEnvPort)
	for {
		conn, err := socket.Accept()
		if utils.HandleError(err) {
			continue
		}

		utils.SocketList[strings.Split(conn.RemoteAddr().String(), ":")[0]] = conn
	}
}

func HandleServer() {
	socket, err := net.Listen("tcp", fmt.Sprintf("0.0.0.0:%d", utils.ShellRcvPort))
	if err != nil {
		panic(err)
	}

	fmt.Println("[ShellRcvPort] Listening on port", utils.ShellRcvPort)
	for {
		conn, err := socket.Accept()
		if utils.HandleError(err) {
			continue
		}

		go NewTelnetSession(conn).HandleConnection()
	}
}
